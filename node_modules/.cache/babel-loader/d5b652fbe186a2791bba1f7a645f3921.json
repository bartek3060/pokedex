{"ast":null,"code":"import _toConsumableArray from\"C:/Users/barte/Desktop/Nowy folder (2)/pokedex/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from\"@reduxjs/toolkit\";export var pokemonAddSlice=createSlice({name:'addSlice',initialState:{pokemonList:[],pokemonToDisplay:[],firstLoad:true,isLoading:true,isError:false,offSet:0},reducers:{updatePokemonList:function updatePokemonList(state,action){console.log(action.payload.completePokemonArray);state.pokemonList=[].concat(_toConsumableArray(state.pokemonList),_toConsumableArray(action.payload.completePokemonArray));state.pokemonToDisplay=_toConsumableArray(state.pokemonList);state.offSet+=30;state.firstLoad=false;},setisLoading:function setisLoading(state,action){state.isLoading=!state.isLoading;},filterDataToDisplay:function filterDataToDisplay(state,action){if(action.payload.type===''&&action.payload.name===''){return;}else if(action.payload.type===''&&action.payload.name!==''){state.pokemonToDisplay=state.pokemonList.concat().filter(function(pokemon){return pokemon.name.includes(action.payload.name);});}else if(action.payload.type!==''&&action.payload.name===''){if(action.payload.type==='All'){state.pokemonToDisplay=_toConsumableArray(state.pokemonList);}else{state.pokemonToDisplay=state.pokemonList.concat().filter(function(pokemon){return pokemon.types[0].type.name===action.payload.type;});}}else{if(action.payload.type==='All'){state.pokemonToDisplay=state.pokemonList.concat().filter(function(pokemon){return pokemon.name.includes(action.payload.name);});}else{state.pokemonToDisplay=state.pokemonList.concat().filter(function(pokemon){return pokemon.name.includes(action.payload.name)&&pokemon.types[0].type.name===action.payload.type;});}}}}});","map":{"version":3,"sources":["C:/Users/barte/Desktop/Nowy folder (2)/pokedex/src/components/store/pokemonAddSlice.js"],"names":["createSlice","pokemonAddSlice","name","initialState","pokemonList","pokemonToDisplay","firstLoad","isLoading","isError","offSet","reducers","updatePokemonList","state","action","console","log","payload","completePokemonArray","setisLoading","filterDataToDisplay","type","concat","filter","pokemon","includes","types"],"mappings":"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","sourcesContent":["import {\r\n    createSlice\r\n} from \"@reduxjs/toolkit\";\r\nexport const pokemonAddSlice = createSlice({\r\n    name: 'addSlice',\r\n    initialState: {\r\n        pokemonList: [],\r\n        pokemonToDisplay: [],\r\n        firstLoad: true,\r\n        isLoading: true,\r\n        isError: false,\r\n\r\n        offSet: 0\r\n    },\r\n    reducers: {\r\n        updatePokemonList: (state, action) => {\r\n\r\n            console.log(action.payload.completePokemonArray)\r\n            state.pokemonList = [...state.pokemonList, ...action.payload.completePokemonArray]\r\n            state.pokemonToDisplay = [...state.pokemonList]\r\n            state.offSet += 30\r\n\r\n            state.firstLoad = false\r\n\r\n        },\r\n        setisLoading: (state, action) => {\r\n            state.isLoading = !state.isLoading\r\n        },\r\n        filterDataToDisplay: (state, action) => {\r\n            if (action.payload.type === '' && action.payload.name === '') {\r\n                return\r\n            } else if (action.payload.type === '' && action.payload.name !== '') {\r\n\r\n                state.pokemonToDisplay = state.pokemonList.concat().filter(\r\n                    pokemon =>\r\n                    pokemon.name.includes(action.payload.name))\r\n            } else if (action.payload.type !== '' && action.payload.name === '') {\r\n\r\n\r\n                if (action.payload.type === 'All') {\r\n                    state.pokemonToDisplay = [...state.pokemonList]\r\n                } else {\r\n                    state.pokemonToDisplay = state.pokemonList.concat().filter(\r\n                        pokemon =>\r\n                        pokemon.types[0].type.name === action.payload.type)\r\n                }\r\n\r\n\r\n\r\n            } else {\r\n\r\n                if (action.payload.type === 'All') {\r\n                    state.pokemonToDisplay = state.pokemonList.concat().filter(\r\n                        pokemon =>\r\n                        pokemon.name.includes(action.payload.name))\r\n                } else {\r\n                    state.pokemonToDisplay = state.pokemonList.concat().filter(\r\n\r\n                        pokemon =>\r\n                        pokemon.name.includes(action.payload.name) && pokemon.types[0].type.name === action.payload.type)\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}