{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { pokemonAddActions } from \"./storeOfSlices\";\nimport { useSelector } from \"react-redux\";\nexport const fetch20Pokemons = () => {\n  _s();\n\n  const offset = useSelector(state => state.pokemonAddSlice.offset);\n  return async dispatch => {\n    const fetchPokemonList = async () => {\n      const response = await fetch(`https:pokeapi.co/api/v2/pokemon?limit=20&offset=${offset}`);\n\n      if (!response.ok) {\n        throw new Error('failed fetch Pokemons');\n      }\n\n      const responsePokemons = await response.json();\n      console.log(responsePokemons);\n      return responsePokemons;\n    };\n\n    const fetchSinglePokemon = async name => {\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n\n      if (!response.ok) {\n        throw new Error('failed fetch Pokemon');\n      }\n\n      const responsePokemon = await response.json();\n      return responsePokemon;\n    };\n\n    try {\n      const {\n        results: pokemonsToFetch\n      } = await fetchPokemonList();\n      console.log(pokemonsToFetch);\n      const completePokemonArray = await [];\n\n      for await (const pokemon of pokemonsToFetch) {\n        const pokemonData = await fetchSinglePokemon(pokemon.name);\n        completePokemonArray.push(pokemonData);\n        console.log(completePokemonArray);\n      }\n\n      console.log(completePokemonArray);\n      await dispatch(pokemonAddActions.updatePokemonList({\n        completePokemonArray\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n_s(fetch20Pokemons, \"MgL7uLRjnhPkbchEor5eOQ/T+qE=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["C:/Users/barte/Desktop/Nowy folder (2)/pokedex/src/components/store/pokemon-actions.js"],"names":["pokemonAddActions","useSelector","fetch20Pokemons","offset","state","pokemonAddSlice","dispatch","fetchPokemonList","response","fetch","ok","Error","responsePokemons","json","console","log","fetchSinglePokemon","name","responsePokemon","results","pokemonsToFetch","completePokemonArray","pokemon","pokemonData","push","updatePokemonList","error"],"mappings":";;AAAA,SACIA,iBADJ,QAEO,iBAFP;AAGA,SACIC,WADJ,QAEO,aAFP;AAIA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,QAAMC,MAAM,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,eAAN,CAAsBF,MAAhC,CAA1B;AAEA,SAAO,MAAMG,QAAN,IAAkB;AAErB,UAAMC,gBAAgB,GAAG,YAAY;AACjC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mDAAkDN,MAAO,EAA3D,CAA5B;;AAEA,UAAI,CAACK,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,YAAMC,gBAAgB,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACA,aAAOA,gBAAP;AACH,KAVD;;AAWA,UAAMI,kBAAkB,GAAG,MAAOC,IAAP,IAAgB;AACvC,YAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCQ,IAAK,EAA3C,CAA5B;;AAEA,UAAI,CAACT,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,YAAMO,eAAe,GAAG,MAAMV,QAAQ,CAACK,IAAT,EAA9B;AAEA,aAAOK,eAAP;AACH,KAVD;;AAWA,QAAI;AACA,YAAM;AACFC,QAAAA,OAAO,EAAEC;AADP,UAEF,MAAMb,gBAAgB,EAF1B;AAGAO,MAAAA,OAAO,CAACC,GAAR,CAAYK,eAAZ;AAEA,YAAMC,oBAAoB,GAAG,MAAM,EAAnC;;AACA,iBAAW,MAAMC,OAAjB,IAA4BF,eAA5B,EAA6C;AACzC,cAAMG,WAAW,GAAG,MAAMP,kBAAkB,CAACM,OAAO,CAACL,IAAT,CAA5C;AACAI,QAAAA,oBAAoB,CAACG,IAArB,CAA0BD,WAA1B;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYM,oBAAZ;AAEH;;AAEDP,MAAAA,OAAO,CAACC,GAAR,CAAYM,oBAAZ;AAEA,YAAMf,QAAQ,CAACN,iBAAiB,CAACyB,iBAAlB,CAAoC;AAC/CJ,QAAAA;AAD+C,OAApC,CAAD,CAAd;AAIH,KApBD,CAoBE,OAAOK,KAAP,EAAc;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AAEH;AAGJ,GAlDD;AAmDH,CAtDM;;GAAMxB,e;UACMD,W","sourcesContent":["import {\r\n    pokemonAddActions\r\n} from \"./storeOfSlices\"\r\nimport {\r\n    useSelector\r\n} from \"react-redux\"\r\n\r\nexport const fetch20Pokemons = () => {\r\n    const offset = useSelector(state => state.pokemonAddSlice.offset)\r\n\r\n    return async dispatch => {\r\n\r\n        const fetchPokemonList = async () => {\r\n            const response = await fetch(`https:pokeapi.co/api/v2/pokemon?limit=20&offset=${offset}`)\r\n\r\n            if (!response.ok) {\r\n                throw new Error('failed fetch Pokemons')\r\n            }\r\n\r\n            const responsePokemons = await response.json()\r\n            console.log(responsePokemons)\r\n            return responsePokemons\r\n        }\r\n        const fetchSinglePokemon = async (name) => {\r\n            const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n\r\n            if (!response.ok) {\r\n                throw new Error('failed fetch Pokemon')\r\n            }\r\n\r\n            const responsePokemon = await response.json()\r\n\r\n            return responsePokemon\r\n        }\r\n        try {\r\n            const {\r\n                results: pokemonsToFetch\r\n            } = await fetchPokemonList()\r\n            console.log(pokemonsToFetch)\r\n\r\n            const completePokemonArray = await []\r\n            for await (const pokemon of pokemonsToFetch) {\r\n                const pokemonData = await fetchSinglePokemon(pokemon.name)\r\n                completePokemonArray.push(pokemonData)\r\n                console.log(completePokemonArray)\r\n\r\n            }\r\n\r\n            console.log(completePokemonArray)\r\n\r\n            await dispatch(pokemonAddActions.updatePokemonList({\r\n                completePokemonArray\r\n            }))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n\r\n        }\r\n\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}