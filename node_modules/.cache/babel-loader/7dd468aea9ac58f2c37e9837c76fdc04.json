{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/barte/Desktop/Nowy folder (2)/pokedex/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _asyncIterator from\"C:/Users/barte/Desktop/Nowy folder (2)/pokedex/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\barte\\\\Desktop\\\\Nowy folder (2)\\\\pokedex\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{pokemonAddActions}from\"./storeOfSlices\";export var fetch20Pokemons=function fetch20Pokemons(off){var offset=off;console.log(off);return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var fetchPokemonList,fetchSinglePokemon,_yield$fetchPokemonLi,pokemonsToFetch,completePokemonArray,_iteratorAbruptCompletion,_didIteratorError,_iteratorError,_iterator,_step,pokemon,pokemonData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:fetchPokemonList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,responsePokemons;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https:pokeapi.co/api/v2/pokemon?limit=20&offset=\".concat(offset));case 2:response=_context.sent;if(response.ok){_context.next=5;break;}throw new Error('failed fetch Pokemons');case 5:_context.next=7;return response.json();case 7:responsePokemons=_context.sent;return _context.abrupt(\"return\",responsePokemons);case 9:case\"end\":return _context.stop();}}},_callee);}));return function fetchPokemonList(){return _ref2.apply(this,arguments);};}();fetchSinglePokemon=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name){var response,responsePokemon;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(name));case 2:response=_context2.sent;if(response.ok){_context2.next=5;break;}throw new Error('failed fetch Pokemon');case 5:_context2.next=7;return response.json();case 7:responsePokemon=_context2.sent;return _context2.abrupt(\"return\",responsePokemon);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchSinglePokemon(_x2){return _ref3.apply(this,arguments);};}();_context3.prev=2;dispatch(pokemonAddActions.setisLoading());_context3.next=6;return fetchPokemonList();case 6:_yield$fetchPokemonLi=_context3.sent;pokemonsToFetch=_yield$fetchPokemonLi.results;_context3.next=10;return[];case 10:completePokemonArray=_context3.sent;_iteratorAbruptCompletion=false;_didIteratorError=false;_context3.prev=13;_iterator=_asyncIterator(pokemonsToFetch);case 15:_context3.next=17;return _iterator.next();case 17:if(!(_iteratorAbruptCompletion=!(_step=_context3.sent).done)){_context3.next=26;break;}pokemon=_step.value;_context3.next=21;return fetchSinglePokemon(pokemon.name);case 21:pokemonData=_context3.sent;completePokemonArray.push(pokemonData);case 23:_iteratorAbruptCompletion=false;_context3.next=15;break;case 26:_context3.next=32;break;case 28:_context3.prev=28;_context3.t0=_context3[\"catch\"](13);_didIteratorError=true;_iteratorError=_context3.t0;case 32:_context3.prev=32;_context3.prev=33;if(!(_iteratorAbruptCompletion&&_iterator.return!=null)){_context3.next=37;break;}_context3.next=37;return _iterator.return();case 37:_context3.prev=37;if(!_didIteratorError){_context3.next=40;break;}throw _iteratorError;case 40:return _context3.finish(37);case 41:return _context3.finish(32);case 42:_context3.next=44;return dispatch(pokemonAddActions.updatePokemonList({completePokemonArray:completePokemonArray}));case 44:dispatch(pokemonAddActions.setisLoading());_context3.next=50;break;case 47:_context3.prev=47;_context3.t1=_context3[\"catch\"](2);console.log(_context3.t1);case 50:case\"end\":return _context3.stop();}}},_callee3,null,[[2,47],[13,28,32,42],[33,,37,41]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/barte/Desktop/Nowy folder (2)/pokedex/src/components/store/pokemon-actions.js"],"names":["pokemonAddActions","fetch20Pokemons","off","offset","console","log","dispatch","fetchPokemonList","fetch","response","ok","Error","json","responsePokemons","fetchSinglePokemon","name","responsePokemon","setisLoading","pokemonsToFetch","results","completePokemonArray","pokemon","pokemonData","push","updatePokemonList"],"mappings":"yZAAA,OACIA,iBADJ,KAEO,iBAFP,CAKA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAS,CACpC,GAAMC,CAAAA,MAAM,CAAGD,GAAf,CACAE,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAEA,+FAAO,kBAAMI,QAAN,wTAGGC,gBAHH,2FAGsB,uLACEC,CAAAA,KAAK,2DAAoDL,MAApD,EADP,QACfM,QADe,kBAGhBA,QAAQ,CAACC,EAHO,8BAIX,IAAIC,CAAAA,KAAJ,CAAU,uBAAV,CAJW,8BAOUF,CAAAA,QAAQ,CAACG,IAAT,EAPV,QAOfC,gBAPe,+CASdA,gBATc,wDAHtB,kBAGGN,CAAAA,gBAHH,4CAcGO,kBAdH,2FAcwB,kBAAOC,IAAP,0KACAP,CAAAA,KAAK,6CAAsCO,IAAtC,EADL,QACjBN,QADiB,mBAGlBA,QAAQ,CAACC,EAHS,+BAIb,IAAIC,CAAAA,KAAJ,CAAU,sBAAV,CAJa,+BAOOF,CAAAA,QAAQ,CAACG,IAAT,EAPP,QAOjBI,eAPiB,iDAShBA,eATgB,0DAdxB,kBAcGF,CAAAA,kBAdH,gEA0BCR,QAAQ,CAACN,iBAAiB,CAACiB,YAAlB,EAAD,CAAR,CA1BD,uBA8BWV,CAAAA,gBAAgB,EA9B3B,6CA6BcW,eA7Bd,uBA6BKC,OA7BL,yBAiCoC,EAjCpC,SAiCOC,oBAjCP,mHAkC6BF,eAlC7B,mJAkCkBG,OAlClB,qCAmC+BP,CAAAA,kBAAkB,CAACO,OAAO,CAACN,IAAT,CAnCjD,SAmCWO,WAnCX,gBAoCKF,oBAAoB,CAACG,IAArB,CAA0BD,WAA1B,EApCL,kkBA2COhB,CAAAA,QAAQ,CAACN,iBAAiB,CAACwB,iBAAlB,CAAoC,CAC/CJ,oBAAoB,CAApBA,oBAD+C,CAApC,CAAD,CA3Cf,SA8CCd,QAAQ,CAACN,iBAAiB,CAACiB,YAAlB,EAAD,CAAR,CA9CD,qFAiDCb,OAAO,CAACC,GAAR,eAjDD,iGAAP,+DAuDH,CA3DM","sourcesContent":["import {\r\n    pokemonAddActions\r\n} from \"./storeOfSlices\"\r\n\r\n\r\nexport const fetch20Pokemons = (off) => {\r\n    const offset = off\r\n    console.log(off)\r\n\r\n    return async dispatch => {\r\n\r\n\r\n        const fetchPokemonList = async () => {\r\n            const response = await fetch(`https:pokeapi.co/api/v2/pokemon?limit=20&offset=${offset}`)\r\n\r\n            if (!response.ok) {\r\n                throw new Error('failed fetch Pokemons')\r\n            }\r\n\r\n            const responsePokemons = await response.json()\r\n\r\n            return responsePokemons\r\n        }\r\n        const fetchSinglePokemon = async (name) => {\r\n            const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n\r\n            if (!response.ok) {\r\n                throw new Error('failed fetch Pokemon')\r\n            }\r\n\r\n            const responsePokemon = await response.json()\r\n\r\n            return responsePokemon\r\n        }\r\n        try {\r\n            dispatch(pokemonAddActions.setisLoading())\r\n\r\n            const {\r\n                results: pokemonsToFetch\r\n            } = await fetchPokemonList()\r\n\r\n\r\n            const completePokemonArray = await []\r\n            for await (const pokemon of pokemonsToFetch) {\r\n                const pokemonData = await fetchSinglePokemon(pokemon.name)\r\n                completePokemonArray.push(pokemonData)\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n            await dispatch(pokemonAddActions.updatePokemonList({\r\n                completePokemonArray\r\n            }))\r\n            dispatch(pokemonAddActions.setisLoading())\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n\r\n        }\r\n\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}